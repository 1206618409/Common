package com.oop.extend;

/**
 *  继承：
 *      表示子类跟父类之间的关系
 *      当两个类或者多个类之间有相同之间的属性和方法的时候，可以提取出来，变成父类，子类可以继承
 *
 *      子类和父类时is-a的关系
 *
 *    使用：
 *        1、使用继承关系时候需要使用extends关键字
 *        2、使用继承关系之后，父类中的属性都可以在子类中进行使用（非私有属性、方法）
 *        3、java中是单继承关系（如果包含多个父类，同事父类中包含重名方法，无法决定该调用谁）
 *        super关键字
 *          super是直接父类    对象的引用
 *              1、可以通过super来访问父类中被子类覆盖的方法和属性   super.父类方法名称
 *              2、当super在普通方法中使用的时候可以任意位置编写
 *              3、当super在构造方法中使用的话，会调用父类的构造方法，一定将super放在第一行
 *              4、在构造方法中super关键字和this关键字不能同时出现
 *              5、父类中私有的属性和方法都不能被调用，包括构造方法
 *              6、子类的构造方法中都会默认使用super关键字调用父类构造方法，因此在定义类的时候，
 *              无论自己是否定义了其他构造方法，最好将无参构造方法写上
 *              7、如果构造方法中显示的指定了super的构造方法，那么无参构造方法就不会被调用
 *        总结：
 *          1、在创建子类对象的时候，一定会优先创建父类对象
 *          2、所有的java类都具备一个老祖宗类，称之为Obejct，是所有的根类
 *
 *     重写：
       必须存在继承关系：当父类中的方法无法满足子类需求的时候可以选择重写方式
        注意：
        1、重写表示的是子类覆盖父类的方法，当覆盖之后，调用同样的方法的时候会优先调用子类
        2、重写的方法名称， 返回值类型，参数列表必须跟父类一样
        3、子类重写的方法不允许比父类的方法具备更小的访问权限

         父类的静态方法子类可以进行调用，但是子类不可以重写
          super和this不能再static方法中
 */
public class PetTest {
    public static void main(String[] args) {
        Dog d = new Dog();
        d.setName("小哈");
        System.out.println(d.getName());
        d.play();

    }
}
